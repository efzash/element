ELEMENT
|get started
|download
|documentation/api
|examples
|contacts
|support

HOME:
	Introducing ELEMENT
	new generation gui framework
	try the magic of most advanced web technologies
	abstract, logical, powerful, different

	[get started]
	[download v0.1]
	[changelog] 
	[where am I?]

Statements:
1. Sass based
2. 


	Principles/Features of the ELEMENT:
	1. modulness
	2. flexibility/deep customization
	3. best practises
	4. logical naming

DOCUMENTATION:
	Left panel:
	------------------
	 Get started
	 Requirements
	 Structure
	 Installation
	 Workflow
	 Resources
	------------------
	 Base
	 Container
	 Lists
	 Grid
	 Visibility
	 Type
	 Forms
	 Utilities
	 Vertical and Horizontal
	 Rhythm/Spacing
	------------------
	 Using Techniques
		OOCSS
		BEM
		SMACCSS
		Golden Ration
		Vertical Rhythm
	------------------


GET STARTED:
	What is GUI framework?
		{Explain}
	What is framework need for?
		{Explain}
	What the features has ELEMENT?
		{Explain}
		See features section..
	What I need to know to get start?
		{Explain}
		What you need to know to effective use this framework (include external links to each statement):
		- basics of JavaScript and jQuery
		- HTML and CSS (CSS3, Media Queries, Keyframes, @font-face etc.)
		- What is CSS preprocessors
		- SASS documentation (especially "@-rules and directives" and available functions)
		- Read about OOCSS, BEM, SMACCSS
		- Modernizr
		- What is responsive layout
	Why ELEMENT?
		{Explain}
	So..let's start!
	First of all, we need to install it. Explain installation step by step.
		1. Download
		2. Files structure
			'modules' - contains all needed logicaly separated components which eventually(finally) output CSS styles.
			'docs' - name speaks for itself :)
			_modules.scss - import all modules together.
			_mixins.scss - contains all mixins which used throughout(among) components files.
			_functions.scss - contains all functions which used throughout(among) components files.
			_globals.scss - contains global variables.

			Structure of each file:
			* Default variables 
			* Mixins
			* Output Styles
		3. 

	By default ELEMENT doesn't generate any styles. Before you set up what the module you need to include, nothing will be included.


CLASS NAMING CONVENTIONS:
	To make class naming logical and intuitive - all of them must obey to some rules:

	All words are indicated the direction of property have the following abbreviations:
		t(top), r(right), b(bottom), l(left)
		tl(top-left), tr(top-right), br(bottom-right), bl(bottom-left)
	(!) It is not include the properties top|right|bottom|left. They have full name.
 
	The frequently used properties that have named values, like:
		display: block|inline|etc;
	Will have only the name of value without property name:
		.block|.inline|etc

	The not frequently used properties that have named values, like:
		word-break: all-break|all-keep|etc;
	Will have only one word (or one shortened word) of property + name of value:
		.word-all-break|.word-all-keep|etc

	The properties indicating the direction of value, for example:
		margin-right: value;|border-radius-top-left: value;
	Will have one word of the property + shortened name of direction + value:
		.margin-r-value|.radius-tl-value

	Classes started with "-", eg .-gapless means that class by itself make nothing to its holder, because selectors looks like:
		.row.-gapless {...}

	All property and elements of modules can be renamed via _selectors.scss file. The file contains all prefixes whereby..

MIXINS NAMING CONVENTIONS:
	mixins within modules must have the names of the module itself. Eg:
	module _dislaying.scss:
		@mixin displaying () {}

	mixins are used within media rules must have prefix "media-". Eg:
	module _dislaying.scss:
		@mixin media-displaying () {}

RESOURCES:
	caniuse.com, css-tricks.com, hbp5.com, Mozilla development network, w3schools.com, w3c.com and many others.


ABOUT ELEMENT:
	ELEMENT helps Web developers create complex and thoughtful GUI for the contemporary web applications.[b]
		ELEMENT means ...
		The reason to create this project is come with something new and more modular, more abstract, more flexible, more logical than frameworks are existing,
		more tighted with community.
		ELEMENT is free and open-source GUI framework written in SASS that promotes clean, object-oriented design and encourages rapid prototyping.
		It helps you to create new project as well as integrate to existing project. ELEMENT is not just framework, but tool and suit of best practices
		and the most advanced methods to make web more robust and easy. It contains the experience of thousand professionals.
		Why SASS and not LESS? Originally I was creating element in LESS, but sometime later I realised that LESS doesn't have enough features to release necessary and pursued ideas.

		Goals of this framework:
		- modular
		- modulness (SMACSS?)
		- abstract (OOCSS)
		- simple
		- strict structure
		- good maintenance

	Credits.[b]
		Foundation
		Bootstrap
		many else



INSTALLATION:
	For successfully using ELEMENT I recommend to install and use the following tools: grunt, vagrant, vagrant.
	1. sass
	first we need to install ruby. don't hesitate about inawareness of ruby/ruby on rails, I doesn't know it too.
	2. grunt, autoprefixer
	3. vagrant (optional)

NAMING CONVENTIONS:
	Some class names are compromise between shortness and understanding.
	Most of classes have names of native CSS properties.  



DOWNLOAD PAGE:
	What used and included in the framework:
		SCSS - SASS preprocessor
		HTML5 boilerplate
		OOCSS and SMACSS ideology
		Modernizr - framework for capability detection
		jQuery - JavaScript framework
		Autoprefixer - CSS2,3 mixins for generating maximum capabale properties
		Normilize - CSS framework ...

	* Give structure description before allow to download
	All files have .scss extension, which means that they must use SCSS syntax of SASS preprocessor.
	Only one file(styles.scss) has name without underscore. '_' underscore means that
	the file must not be generated by preprocessor to separate CSS file.

	* Caution:
	Please, do not use this framework if you have poor CSS knowledges, don't familiar with CSS preprocessors (especially SASS), Object Oriented CSS ideology, JavaScript etc.


Questions:
	Can I change class names inside all modules?
	Can I include only one or several modules?
	Can I exclude some components inside module?
	Can I exclude only responsive styles?
	Can I ...?
	Does Element allow make fast prototyping, but still unique app?
	Yes it is!

Thoughts:
	You will not find popular normilize.css file there, because it merged within framework
	If you want to understand benefits of our framework read 'Why ELEMENT?'
	All directional properties going in the code as follows: top->right->bottom->left

Naming:
	initialization, next, base, element, default,
	projection

In footer:
	Where am I?
